version: '3.8'

services:
  backend:
    build: ./backend
    image: ${REGISTRY}webrecorder/browsertrix-backend:latest

    security_opt:
      - "label=disable"

    volumes:
      #- /run/podman/podman.sock:/run/podman/podman.sock
      #- /run/podman/podman.sock:/var/run/docker.sock
      - /run/user/1000/podman/podman.sock:/run/podman/podman.sock
      #- /run/user/1000/podman/podman.sock:/var/run/docker.sock

    secrets:
      - shared_job_config.yaml
      #- crawl-opts-07661a05-00b2-407c-b57e-5a54a6806845

    env_file:
      - ./configs/config.env

    depends_on:
      - minio
      - mongo

# enable to expose backend api container directly
#    ports:
#      - 8000:8000

    environment:
      - CRAWLER_FQDN_SUFFIX=
      - JOB_IMAGE=${REGISTRY}webrecorder/browsertrix-backend:latest

    deploy:
      placement:
        constraints:
          - node.role == manager

    restart: always

  frontend:
    build: ./frontend
    image: ${REGISTRY}webrecorder/browsertrix-frontend:latest
    ports:
      - 9871:80

    depends_on:
      - backend
      - minio

    environment:
      - BACKEND_HOST=backend
      - CRAWLER_FQDN_SUFFIX=.dns.podman
      - CRAWLER_SVC_SUFFIX=_crawler
      #proxy_pass http://crawl-$crawl-0_crawler_1.dns.podman:9037/ws;

    restart: always

  mongo:
    image: mongo
    volumes:
      - btrix-mongo-data:/data/db

    env_file:
      - ./configs/config.env

    restart: always

  minio:
    image: minio/minio
    #command: ["server", "/data", "--console-address", ":9001"]

    entrypoint: "/bin/sh"
    # auto-create bucket via existing dir (only for single-node mode)
    command: ["-c", "mkdir -p /data/$$MINIO_BUCKET; /usr/bin/docker-entrypoint.sh server /data --console-address :9001"]

    volumes:
      - btrix-minio-data:/data

    env_file:
      - ./configs/config.env

    restart: always

# enable below to access minio console directly
#    ports:
#      - 9001:9001
#
#    environment:
#      - MINIO_SERVER_URL=http://127.0.0.1:9000


# enable to support signing of wacz files
# port 80 must be open to automatically generate cert via LetsEncrypt
#  authsign:
#    image: webrecorder/authsign:0.4.0

#    volumes:
#      - btrix-sign-data:/data
#      - ./configs/signing.yaml:/app-config/signing.yaml

#    environment:
#      - CONFIG=/app-config/signing.yaml

#    env_file:
#      - ./configs/config.env

#    ports:
#      - 80:80

volumes:
  btrix-redis-data:
  btrix-mongo-data:
  btrix-minio-data:
  btrix-sign-data:

networks:
  default:
    name: btrix-net

secrets:
  shared_job_config.yaml:
    file: ./configs/config.yaml
