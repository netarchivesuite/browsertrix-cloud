---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ id }}
  namespace: {{ namespace }}

spec:
  selector:
    matchLabels:
      crawl: {{ id }}

  #ownerReferences:
  #- apiVersion: batch/v1
  #  blockOwnerDeletion: true
  #  controller: true
  #  kind: Job
  #  name: {{ job_name }}
  #  # uid

  serviceName: {{ id }}
  replicas: {{ crawler_workers }}
  podManagementPolicy: Parallel
  volumeClaimTemplates:
    - metadata:
        name: crawl-data
        annotations:
          helm.sh/resource-policy: keep

      spec:
        accessModes:
          - ReadWriteOnce

        resources:
          requests:
            storage: {{ requests_hd }}

      {% if volume_storage_class %}
      storageClassName: {{ volume_storage_class }}
      {% endif %}

  template:
    metadata:
      labels:
        crawl: {{ id }}

    spec:
      terminationGracePeriod: {{ termination_grace_secs }}
      #nodeSelector: {{ crawl_node_selector }}
      volumes:
        - name: crawl-config
          configMap:
            name: crawl-config-{{ cid }}

        - name: cluster-redis-conf
          configMap:
            name: shared-job-config
            items:
              - key: redis.conf
                path: redis.conf

        - name: redis-conf
          emptyDir: {}

      initContainers:
        - name: init-redis
          image: {{ redis_image }}
          imagePullPolicy: {{ redis_image_pull_policy }}
          command:
            - bash
            - "-c"
            - |
              set -ex
              # if no ordinal found in hostname, something is wrong, exit
              [[ `hostname` =~ (.+)-([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[2]}
              base=${BASH_REMATCH[1]}

              # if ordinal is 0, use main config, otherwise use replica
              cp /cluster-redis-conf/redis.conf /redis-conf/redis.conf
              if [[ $ordinal -ne 0 ]]; then
                echo "replicaof $base-0.$base 6379" >> /redis-conf/redis.conf
              fi

          volumeMounts:
            - name: cluster-redis-conf
              mountPath: /cluster-redis-conf

            - name: redis-conf
              mountPath: /redis-conf

      containers:
        - name: crawler
          image: {{ crawler_image }}
          imagePullPolicy: {{ crawler_image_pull_policy }}
          command: ["crawl", "--config", "/tmp/crawl-config.json", "--redisStoreUrl", "{{ redis_url }}"]

          volumeMounts:
            - name: crawl-config
              mountPath: /tmp/crawl-config.json
              subPath: crawl-config.json
              readOnly: True

            - name: crawl-data
              mountPath: /crawls
              subPath: crawls

          envFrom:
            - configMapRef:
                name: shared-crawler-config

            - secretRef:
                name: storage-{{ storage_name }}

          env:
            - name: CRAWL_ID
              value: {{ id }}

            - name: REDIS_URL
              value: {{ redis_url }}

            - name: NO_LAUNCH_REDIS
              value: "1"

            - name: STORE_PATH
              valueFrom:
                configMapKeyRef:
                  name: crawl-config-{{ cid }}
                  key: STORE_PATH

            - name: STORE_FILENAME
              valueFrom:
                configMapKeyRef:
                  name: crawl-config-{{ cid }}
                  key: STORE_FILENAME

          resources:
            limits:
              cpu: {{ crawler_limits_cpu }}
              memory: {{ crawler_limits_memory }}

            requests:
              cpu: {{ crawler_requests_cpu }}
              memory: {{ crawler_requests_memory }}

          {% if crawler_liveness_port and crawler_liveness_port != '0' %}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ crawler_liveness_port }}

            initialDelaySeconds: 15
            periodSeconds: 120
            failureThreshold: 3
          {% endif %}

        - name: redis
          image: {{ redis_image }}
          imagePullPolicy: {{ redis_image_pull_policy }}

          args: ["/redis-conf/redis.conf", "--appendonly", "yes"]
          volumeMounts:
            - name: crawl-data
              mountPath: /data
              subPath: redis

            - name: redis-conf
              mountPath: /redis-conf

          resources:
            limits:
              cpu: {{ redis_limits_cpu }}
              memory: {{ redis_limits_memory }}

            requests:
              cpu: {{ redis_requests_cpu }}
              memory: {{ redis_requests_memory }}

          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping

---
apiVersion: v1
kind: Service
metadata:
  name: {{ id }}
  labels:
    crawl: {{ id }}
 
spec:
  clusterIP: None
  selector:
    crawl: {{ id }}

  ports:
    - protocol: TCP
      port: 9037
      name: screencast

    - protocol: TCP
      port: 6379
      name: redis
